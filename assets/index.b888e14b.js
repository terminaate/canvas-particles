var f=Object.defineProperty;var p=(n,t,r)=>t in n?f(n,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[t]=r;var s=(n,t,r)=>(p(n,typeof t!="symbol"?t+"":t,r),r);const g=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&e(a)}).observe(document,{childList:!0,subtree:!0});function r(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function e(i){if(i.ep)return;i.ep=!0;const o=r(i);fetch(i.href,o)}};g();class y{constructor({canvas:t,minRadius:r=1,maxRadius:e=4,particlesVelocity:i=2,particlesCount:o=200,mouseRadius:a=20,width:h=500,height:l=500,generateOnMouseDown:u=!1,drawMouse:d=!1,animate:m=!0}={}){s(this,"minRadius");s(this,"maxRadius");s(this,"particlesVelocity");s(this,"mouseRadius");s(this,"ctx");s(this,"canvas");s(this,"particles",[]);s(this,"width");s(this,"height");s(this,"mouseX",0);s(this,"mouseY",0);s(this,"isMouseDown",!1);s(this,"generateOnMouseDown");s(this,"particlesCount");s(this,"drawMouse");s(this,"animationId",0);s(this,"animate");t||(t=document.createElement("canvas"),document.body.appendChild(t)),this.width=this.getWidth(h),this.height=this.getHeight(l),t.height=this.height,t.width=this.width,onresize=()=>{t.width=this.getWidth(h),t.height=this.getHeight(l)},this.canvas=t,addEventListener("mousemove",c=>{this.mouseX=c.clientX,this.mouseY=c.clientY}),addEventListener("mousedown",()=>{this.isMouseDown=!0}),addEventListener("mouseup",()=>{this.isMouseDown=!1}),this.ctx=this.canvas.getContext("2d"),this.minRadius=r,this.maxRadius=e,this.particlesVelocity=i,this.particlesCount=o,this.mouseRadius=a,this.generateOnMouseDown=u,this.drawMouse=d,this.animate=m,this.main=this.main.bind(this),this.loop=this.loop.bind(this),this.main()}getWidth(t){return typeof t=="string"?t.endsWith("%")?parseInt(t)<100?innerWidth/100*parseInt(t):innerWidth:parseInt(t):t}getHeight(t){return typeof t=="string"?t.endsWith("%")?parseInt(t)<100?innerHeight/100*parseInt(t):innerHeight:parseInt(t):t}drawCircle(t,r,e,i="#000",o=!0,a="#222",h=!1){this.ctx.beginPath(),this.ctx.arc(t,r,e,0,2*Math.PI,!1),this.ctx.fillStyle=i,o&&this.ctx.fill(),this.ctx.strokeStyle=a,h&&this.ctx.stroke()}drawBackground(t="#000"){this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}main(){if(this.particles=[],!this.generateOnMouseDown)for(let t=0;t<this.particlesCount;t++)this.generateParticle(Math.random()*this.canvas.width,Math.random()*this.canvas.height);this.loop()}loop(){this.drawBackground(),this.generateOnMouseDown&&this.particles.length<this.particlesCount&&this.isMouseDown&&this.mouseX>0&&this.mouseY>0&&this.generateParticle(this.mouseX,this.mouseY);for(let r in this.particles){let e=this.particles[r];this.drawCircle(e.x,e.y,e.radius,e.color),e.x<0?e.x=this.canvas.width:e.x+=e.velocityX,e.y<0?e.y=this.canvas.height-e.radius/2:e.y-=e.velocityY}let t=.1;this.isMouseDown&&(t+=.1),this.drawMouse&&this.drawCircle(this.mouseX,this.mouseY,this.mouseRadius,`rgba(255, 255, 255, ${t})`),this.animate&&(this.animationId=requestAnimationFrame(this.loop))}generateParticle(t=0,r=0){const e=Math.floor(Math.random()*(this.maxRadius-this.minRadius+1))+this.minRadius;this.particles.push({x:t,y:r,radius:e,color:`rgb(255, 255, 255, ${Math.random()*1})`,velocityX:Math.random()*(this.particlesVelocity*2)-this.particlesVelocity,velocityY:Math.random()*(this.particlesVelocity*2)+this.particlesVelocity})}stop(){cancelAnimationFrame(this.animationId)}start(){this.animationId=requestAnimationFrame(this.loop)}}new y({width:"100%",height:"100%"});
